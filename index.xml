<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hackions-Blog</title>
    <link>https://hackions.github.io/blog/index.xml</link>
    <description>Recent content on Hackions-Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/hackions&#34;&gt;Hackions&lt;/a&gt; 2016</copyright>
    <lastBuildDate>Sun, 25 Dec 2016 01:55:50 +0530</lastBuildDate>
    <atom:link href="https://hackions.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Angular 2 pipe and An npm module</title>
      <link>https://hackions.github.io/blog/post/Angular-2-pipe-and-An-npm-module/</link>
      <pubDate>Sun, 25 Dec 2016 01:55:50 +0530</pubDate>
      
      <guid>https://hackions.github.io/blog/post/Angular-2-pipe-and-An-npm-module/</guid>
      <description>

&lt;h2 id=&#34;angular-2-pipe-and-an-npm-module&#34;&gt;&amp;ldquo;Angular 2 pipe and An npm module&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;Few days ago , while working on a project which required around 200 names to be displayed at once and that too on a mobile screen &amp;hellip;that&amp;rsquo;s berzerk!!!&lt;/p&gt;

&lt;p&gt;So thought of letting the user enter the names rather than searching from giant list of hundreds so made a sweet input box and then thought of applying the filter like we do in Angular 1 using its pre-defined search filter&amp;hellip;but wait I was working on Angular 2 and surprise surprise it doesnt has a pre-defined search filter like Angular 1 did ..bummed!!&lt;/p&gt;

&lt;p&gt;So thought lets make one then , i looked over the Angular 2 official docs and saw pipes(&lt;em&gt;_&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;By the way a pipe is nothing just this | , Yes this is a pipe .&lt;/p&gt;

&lt;p&gt;So i dug little deeper and found PipeTransform implementing which i thought of making a filer for myself and offcourse for my project.&lt;/p&gt;

&lt;p&gt;So ng2-search filter was born which allowed to filter large list of names based on the character that user writes i.e.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you write letter &amp;lsquo;q&amp;rsquo; , then it will filter all the names having &amp;lsquo;q&amp;rsquo; in them so it totally solved my purpose.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Demo Below,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/dI5Mzvq.gif&#34; alt=&#34;demo-image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I then thought why not make it an open-source npm module , so i uploaded it on the ever-increasing npm global module repository consisting of lakhs of packages.&lt;/p&gt;

&lt;p&gt;Mine is called &amp;ldquo;ng2-search-filter&amp;rdquo;(&lt;a href=&#34;https://www.npmjs.com/package/ng2-search-filter&#34;&gt;https://www.npmjs.com/package/ng2-search-filter&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;By the way , the module got 117 downloads in its first 14 hrs online .&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Hackions</title>
      <link>https://hackions.github.io/blog/post/welcome-to-hackions/</link>
      <pubDate>Sun, 25 Dec 2016 00:58:05 +0530</pubDate>
      
      <guid>https://hackions.github.io/blog/post/welcome-to-hackions/</guid>
      <description>

&lt;h3 id=&#34;hackions-is-the-computer-club-of-bpit&#34;&gt;Hackions is the computer club of BPIT.&lt;/h3&gt;
</description>
    </item>
    
  </channel>
</rss>